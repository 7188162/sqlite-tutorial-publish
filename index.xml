<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ようこそ！SQLite&#43;A5 SQL:Mk2 データ分析入門 on SQLite &#43; A5 SQL:Mk2 学習サイト</title>
    <link>https://sqlite-tutorial.vercel.app/</link>
    <description>Recent content in ようこそ！SQLite&#43;A5 SQL:Mk2 データ分析入門 on SQLite &#43; A5 SQL:Mk2 学習サイト</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <atom:link href="https://sqlite-tutorial.vercel.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第1章 移行メリット詳細（パフォーマンス・概念比較）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter1/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;MS AccessとSQLiteのパフォーマンスを実測データで比較する&lt;/li&gt;&#xA;&lt;li&gt;Accessの「クエリ」とSQLiteの「ビュー」など、概念の違いを理解する&lt;/li&gt;&#xA;&lt;li&gt;どのような場合に移行が有効か、判断基準を学ぶ&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;11-パフォーマンス比較なぜsqliteは速いのか&#34;&gt;1.1 パフォーマンス比較：なぜSQLiteは速いのか？&lt;/h2&gt;&#xA;&lt;p&gt;MS Accessも手軽で優れたデータベースですが、データ量が数万件を超えてくると、特定の処理で速度低下が見られることがあります。一方、SQLiteは大量データを高速に扱うことに特化して設計されています。&lt;/p&gt;&#xA;&lt;p&gt;ここでは、5万件の売上データを元に、典型的なデータ処理の実行速度を比較した結果を見てみましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;chart-container&#34;&gt;&#xA;  &lt;canvas id=&#34;performanceChart&#34;&gt;&lt;/canvas&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;info-box tip&#34;&gt;&#xA;  &lt;div class=&#34;info-box-title&#34;&gt;環境による差&lt;/div&gt;&#xA;  &lt;p&gt;この結果は一例です。実際のパフォーマンスは、PCのスペック、データベースの設計、クエリの内容によって変動します。しかし、一般的な傾向として、SQLiteが優位性を持つことが多いです。&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;h3 id=&#34;比較データ詳細&#34;&gt;比較データ詳細&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;処理内容&lt;/th&gt;&#xA;          &lt;th&gt;MS Access&lt;/th&gt;&#xA;          &lt;th&gt;SQLite&lt;/th&gt;&#xA;          &lt;th&gt;改善率&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;データ読み込み（5万件）&lt;/td&gt;&#xA;          &lt;td&gt;12.3秒&lt;/td&gt;&#xA;          &lt;td&gt;2.1秒&lt;/td&gt;&#xA;          &lt;td&gt;🚀 5.9倍高速&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;JOIN処理（3テーブル）&lt;/td&gt;&#xA;          &lt;td&gt;8.7秒&lt;/td&gt;&#xA;          &lt;td&gt;1.4秒&lt;/td&gt;&#xA;          &lt;td&gt;🚀 6.2倍高速&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;集計処理（GROUP BY）&lt;/td&gt;&#xA;          &lt;td&gt;5.2秒&lt;/td&gt;&#xA;          &lt;td&gt;0.8秒&lt;/td&gt;&#xA;          &lt;td&gt;🚀 6.5倍高速&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;12-概念の対応表accessの知識は活かせる&#34;&gt;1.2 概念の対応表：Accessの知識は活かせる&lt;/h2&gt;&#xA;&lt;p&gt;基本的な考え方は同じですが、用語や機能の呼び方が異なります。Accessでの経験は、SQLiteを学ぶ上で大きなアドバンテージになります。&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;info-box access-note&#34;&gt;&#xA;  &lt;div class=&#34;info-box-title&#34;&gt;Accessの「クエリ」はSQLiteの「ビュー」&lt;/div&gt;&#xA;  &lt;p&gt;最も重要な対応関係の一つがこれです。Accessで保存したクエリは、SQLiteの「ビュー(VIEW)」に相当します。ビューとして定義すれば、Accessのクエリと同じように再利用できます。&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;MS Accessの概念&lt;/th&gt;&#xA;          &lt;th&gt;SQLiteの対応概念&lt;/th&gt;&#xA;          &lt;th&gt;備考&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;テーブル&lt;/td&gt;&#xA;          &lt;td&gt;テーブル (TABLE)&lt;/td&gt;&#xA;          &lt;td&gt;同じです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;クエリ&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ビュー (VIEW)&lt;/strong&gt;, または直接実行するSELECT文&lt;/td&gt;&#xA;          &lt;td&gt;保存して再利用するものはビューが近いです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;フォーム/レポート&lt;/td&gt;&#xA;          &lt;td&gt;(直接の対応なし)&lt;/td&gt;&#xA;          &lt;td&gt;A5:SQL Mk2やExcel/BIツールがUIの役割を担います。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;データ型: テキスト&lt;/td&gt;&#xA;          &lt;td&gt;TEXT&lt;/td&gt;&#xA;          &lt;td&gt;同じです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;データ型: 数値型&lt;/td&gt;&#xA;          &lt;td&gt;INTEGER (整数), REAL (小数)&lt;/td&gt;&#xA;          &lt;td&gt;Accessよりシンプルな型システムです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;データ型: 日時型&lt;/td&gt;&#xA;          &lt;td&gt;TEXT, REAL, INTEGER のいずれかで保存&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; 形式のテキストで保存するのが一般的です。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;主キー&lt;/td&gt;&#xA;          &lt;td&gt;PRIMARY KEY&lt;/td&gt;&#xA;          &lt;td&gt;同じです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;インデックス&lt;/td&gt;&#xA;          &lt;td&gt;INDEX&lt;/td&gt;&#xA;          &lt;td&gt;同じです。SQLiteではインデックスの重要性がより高まります。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;VBA (マクロ)&lt;/td&gt;&#xA;          &lt;td&gt;(直接の対応なし)&lt;/td&gt;&#xA;          &lt;td&gt;Pythonなどのスクリプト言語で自動化を代替することが多いです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;13-移行の判断基準&#34;&gt;1.3 移行の判断基準&lt;/h2&gt;&#xA;&lt;p&gt;すべてのケースで移行が必要なわけではありません。以下の点を考慮して、移行を検討しましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第2章 環境構築</title>
      <link>https://sqlite-tutorial.vercel.app/chapter2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter2/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;SQLiteをPCにインストールする&lt;/li&gt;&#xA;&lt;li&gt;高機能なデータベース管理ツール「A5 SQL:Mk2」を導入する&lt;/li&gt;&#xA;&lt;li&gt;A5 SQL:Mk2を使ってSQLiteデータベースに接続する&lt;/li&gt;&#xA;&lt;li&gt;データベースファイルのバックアップと復旧方法を理解する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;この章では、データ分析の土台となる環境を構築します。MS Accessとは異なり、SQLiteはいくつかのツールを組み合わせて利用するのが一般的です。&lt;/p&gt;&#xA;&lt;p&gt;ここでは、世界中で広く使われているデータベースエンジン「&lt;strong&gt;SQLite&lt;/strong&gt;」と、日本の開発者によって作られた非常に高機能で使いやすい管理ツール「&lt;strong&gt;A5 SQL:Mk2&lt;/strong&gt;（エーファイブ・エスキューエル・マークツー）」の2つを導入します。&lt;/p&gt;&#xA;&lt;p&gt;一つ一つの手順を丁寧に解説しますので、一緒に進めていきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第3章 ハイブリッド運用（ODBC・パススルークエリ）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter3/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;ODBCの役割を理解し、SQLite用ドライバをセットアップする&lt;/li&gt;&#xA;&lt;li&gt;MS AccessからSQLiteデータベースへ「リンクテーブル」として接続する&lt;/li&gt;&#xA;&lt;li&gt;Accessのフォームやレポートはそのままに、データソースだけをSQLiteに置き換える&lt;/li&gt;&#xA;&lt;li&gt;大量データ処理を高速化する「パススルークエリ」を学び、その効果を体感する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;「SQLiteが高速なのは分かったけど、今あるAccessのフォームやレポートを全部作り直すのは大変…」&lt;/p&gt;&#xA;&lt;p&gt;そう考えるのは当然です。この章では、そのお悩みを解決する&lt;strong&gt;ハイブリッド運用&lt;/strong&gt;について学びます。これは、使い慣れたAccessのインターフェースはそのままに、データが格納されているバックエンド（裏側）だけを高速なSQLiteに置き換える、非常に実用的なテクニックです。&lt;/p&gt;&#xA;&lt;p&gt;この手法を使えば、移行のリスクを最小限に抑えつつ、パフォーマンスが求められる処理から段階的にSQLiteへ移行していくことが可能になります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第4章 基本操作（ビュー作成含む）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter4/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;A5 SQL:Mk2を使ってテーブルを設計・作成する&lt;/li&gt;&#xA;&lt;li&gt;CSVファイルからテーブルへデータを簡単にインポートする&lt;/li&gt;&#xA;&lt;li&gt;MS Accessの「クエリ」の役割を果たす「ビュー」を作成・管理する&lt;/li&gt;&#xA;&lt;li&gt;基本的なデータの参照・追加・更新・削除（CRUD）操作に慣れる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;環境構築が完了したところで、いよいよデータベースを実際に操作していきます。この章では、テーブルの作成、データの投入、そしてMS Accessユーザーにとって最も重要な概念の一つである「ビュー」の作成方法まで、一連の基本操作を学びます。&lt;/p&gt;&#xA;&lt;p&gt;A5 SQL:Mk2のグラフィカルなインターフェースを使えば、SQLを直接書かなくても直感的に多くの操作が可能です。Accessのテーブルデザインビューやクエリデザインビューを思い出しながら、取り組んでいきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第5章 クエリ基礎（IIF, COALESCE, CASE）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter5/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;SELECT&lt;/code&gt;文と&lt;code&gt;WHERE&lt;/code&gt;句の基本と、パフォーマンスを意識した書き方を理解する&lt;/li&gt;&#xA;&lt;li&gt;Accessの&lt;code&gt;IIf&lt;/code&gt;関数と同じ感覚で使える、SQLiteの&lt;code&gt;IIF&lt;/code&gt;関数をマスターする&lt;/li&gt;&#xA;&lt;li&gt;NULL値をスマートに扱う&lt;code&gt;COALESCE&lt;/code&gt;関数の使い方を学ぶ&lt;/li&gt;&#xA;&lt;li&gt;複雑な条件分岐を実現する&lt;code&gt;CASE&lt;/code&gt;文を使いこなす&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;テーブルから単にデータを取り出すだけでなく、条件に応じて表示内容を変えたり、値を加工したりしてこそ、データ分析は面白くなります。この章では、そのための強力な武器となるSQLの基本的な関数を学びます。&lt;/p&gt;&#xA;&lt;p&gt;特に、Accessでおなじみの&lt;code&gt;IIf&lt;/code&gt;関数と同じように使える&lt;code&gt;IIF&lt;/code&gt;関数は、すぐにでも活用できる便利な関数です。また、実務データで頻繁に登場する「NULL（空の）値」を効率的に扱う&lt;code&gt;COALESCE&lt;/code&gt;関数や、より高度な条件分岐を可能にする&lt;code&gt;CASE&lt;/code&gt;文も、分析の幅を大きく広げてくれます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第6章 クエリ応用技術（CTE、一時テーブル、IF EXISTS）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter6/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;サブクエリの入れ子地獄から脱却する「CTE（共通テーブル式）」を使いこなす&lt;/li&gt;&#xA;&lt;li&gt;複雑なデータ処理の中間結果を保持する「一時テーブル」の活用法を学ぶ&lt;/li&gt;&#xA;&lt;li&gt;安全なデータベース操作に不可欠な「IF EXISTS」構文を理解する&lt;/li&gt;&#xA;&lt;li&gt;これらの技術を組み合わせて、メンテナンス性の高い分析クエリを構築する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;基本的なSQLが書けるようになったら、次なるステップは「より複雑な分析」への挑戦です。しかし、複数の集計やテーブル結合を一つのクエリで行おうとすると、サブクエリが何重にも入れ子になり、あっという間に解読不能な「スパゲッティSQL」が出来上がってしまいます。&lt;/p&gt;&#xA;&lt;p&gt;この章では、そんなカオスな状況を回避し、ロジカルで読みやすいSQLを書くための強力なテクニックを学びます。特に &lt;strong&gt;CTE (WITH句)&lt;/strong&gt; は、近年のデータ分析において必須のスキルとなっています。これらの応用技術をマスターすれば、あなたのSQLスキルは一段上のレベルに到達するでしょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第7章 インデックス最適化</title>
      <link>https://sqlite-tutorial.vercel.app/chapter7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter7/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;インデックスがなぜ検索を高速化するのか、その基本的な仕組みを理解する&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CREATE INDEX&lt;/code&gt;文を使って、テーブルにインデックスを追加する&lt;/li&gt;&#xA;&lt;li&gt;A5 SQL:Mk2のGUIを使って、視覚的にインデックスを管理する&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;EXPLAIN QUERY PLAN&lt;/code&gt;を使い、インデックスが有効に機能しているか科学的に評価する&lt;/li&gt;&#xA;&lt;li&gt;複数の列を組み合わせた「複合インデックス」を設計し、より複雑な検索を高速化する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;データが数万、数十万件に増えてくると、「特定の条件のデータを検索するだけで数十秒もかかる…」という経験はありませんか？この問題を解決するのが「&lt;strong&gt;インデックス&lt;/strong&gt;」です。&lt;/p&gt;&#xA;&lt;p&gt;インデックスは、分厚い本の巻末にある「索引」のようなものです。索引があれば、探したい単語がどのページにあるか瞬時に分かります。データベースにおけるインデックスも全く同じで、特定のデータがどこにあるかを高速に見つけ出すための仕組みです。&lt;/p&gt;&#xA;&lt;p&gt;この章では、インデックスを効果的に設計・活用し、これまで時間がかかっていた検索処理を劇的に高速化させるための実践的なテクニックを学びます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第8章 実践的分析手法（クロス集計、複合技術活用）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter8/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;CASE&lt;/code&gt;文や&lt;code&gt;IIF&lt;/code&gt;関数と集計関数を組み合わせ、クロス集計表（ピボットテーブル）を作成する&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;COALESCE&lt;/code&gt;関数を使い、集計結果のNULL（空欄）を0に置き換える&lt;/li&gt;&#xA;&lt;li&gt;CTEを活用して、複雑な集計処理を段階的に、かつ可読性高く組み立てる&lt;/li&gt;&#xA;&lt;li&gt;複数のSQL技術を組み合わせて、実務的な分析課題を解決する思考プロセスを学ぶ&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;これまでの章で、SQLの様々な部品（&lt;code&gt;JOIN&lt;/code&gt;, &lt;code&gt;GROUP BY&lt;/code&gt;, &lt;code&gt;CASE&lt;/code&gt;, CTEなど）を学んできました。この章では、それらの部品をプラモデルのように組み上げ、実務で頻繁に求められる「&lt;strong&gt;クロス集計&lt;/strong&gt;」のような、より価値のある分析レポートを作成する技術を習得します。&lt;/p&gt;&#xA;&lt;p&gt;Excelのピボットテーブルで実現しているような集計も、SQLを使いこなせばデータベース側で直接、かつ高速に実行できます。個別の技術をいかにして組み合わせ、目的の分析結果を導き出すか。その思考プロセスに焦点を当てて学んでいきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第9章 生成AI活用（ChatGPT）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter9/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;SQL開発における生成AI（ChatGPT）の活用メリットを理解する&lt;/li&gt;&#xA;&lt;li&gt;効果的な回答を引き出すためのプロンプトエンジニアリングの基本を学ぶ&lt;/li&gt;&#xA;&lt;li&gt;クエリの自動生成、既存クエリの最適化、エラーのデバッグといった具体的な活用シーンを体験する&lt;/li&gt;&#xA;&lt;li&gt;実務ですぐに使えるプロンプトテンプレートを活用する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;SQLの学習や開発において、時には複雑なクエリの書き方が分からなかったり、実行時エラーの原因が掴めなかったりすることがあります。そんな時、24時間365日いつでも相談に乗ってくれる優秀なアシスタントがいたら心強いと思いませんか？&lt;/p&gt;&#xA;&lt;p&gt;この章では、ChatGPTに代表される生成AIを、あなたのSQL開発における「賢い相棒」として活用するためのテクニックを学びます。AIは魔法の杖ではありませんが、正しい使い方（＝質問の仕方）をすれば、開発効率を飛躍的に向上させ、新しい知識を学ぶ手助けとなってくれます。AIとの上手な付き合い方をマスターし、データ分析の生産性をさらに高めましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>第10章 データ出力・連携（Excel・BIツール）</title>
      <link>https://sqlite-tutorial.vercel.app/chapter10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sqlite-tutorial.vercel.app/chapter10/</guid>
      <description>&lt;div class=&#34;learning-objectives&#34;&gt;&#xA;  &lt;h3&gt;📚 この章で学習すること&lt;/h3&gt;&#xA;  &lt;ul class=&#34;objectives-list&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;A5 SQL:Mk2から分析結果をCSVやExcelファイルとしてエクスポートする&lt;/li&gt;&#xA;&lt;li&gt;ExcelのPower Queryを使い、SQLiteデータベースから直接データを取得・更新する&lt;/li&gt;&#xA;&lt;li&gt;既存のExcelレポートのデータソースを、AccessからSQLiteに切り替える&lt;/li&gt;&#xA;&lt;li&gt;Power BIなどのBIツールとSQLiteを連携させるための基本的な考え方を理解する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;データ分析は、SQLを書いて結果を眺めるだけでは終わりません。その結果をレポートとしてまとめ、関係者と共有し、次のビジネスアクションに繋げてこそ価値が生まれます。&lt;/p&gt;&#xA;&lt;p&gt;この最終章では、SQLiteで処理したデータを、最も身近なレポートツールである &lt;strong&gt;Excel&lt;/strong&gt; や、より高度な可視化を得意とする &lt;strong&gt;BI (ビジネスインテリジェンス) ツール&lt;/strong&gt; と連携させる方法を学びます。特に、ExcelのPower Query機能を使えば、手作業でのデータ更新から解放され、レポートの自動化を実現できます。これまで学んだスキルを実務で最大限に活かすための、最後の仕上げです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
